{"version":3,"sources":["resume/jobs.js","resume/skills.js","resume/education.js","resume/coursework.js","resume/index.js","home/index.js","projects/index.js","router.js","serviceWorker.js","index.js","assets/logo.svg"],"names":["Job","props","data","Header","as","company","location","roles","map","position","Position","key","title","dates","List","bullets","bullet","Bullet","Item","Jobs","jobData","job","Domain","skills","proficient","join","familiar","domain","Skills","skillData","College","school","college","gradeuationDate","degree","GPA","honors","honor","HighSchool","Education","educationData","highschool","CourseWork","courseData","relevant","course","additional","Resume","Segment","Grid","columns","relaxed","container","divided","Column","Divider","vertical","Home","className","src","logo","alt","to","Projects","href","navBar","name","Link","WebRouter","Menu","items","path","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.d1a85455.chunk.js","sourcesContent":["import jobData from './data/jobs.json'\nimport React from 'react'\nimport { Header, List } from 'semantic-ui-react'\n\nfunction Jobs() {\n  return <div>\n    {jobData.map(job => <Job key={job} data={job} />)}\n  </div>\n\n}\n\nfunction Job(props) {\n  let { data } = props\n  return <div>\n    <Header as='h2'>{data.company}</Header>\n    <Header as='h3'>{data.location}</Header>\n    <div>\n      {data.roles.map(position => <Position key={position} data={position} />)}\n    </div>\n  </div>\n}\n\nfunction Position(props) {\n  let { data } = props\n  return <div>\n    <Header as='h4'>{data.title}</Header>\n    <Header as='h5'>{data.dates}</Header>\n    <List>\n      {data.bullets.map(bullet => <Bullet key={bullet} data={bullet}/>)}\n    </List>\n  </div>\n}\n\nfunction Bullet(props) {\n  let { data } = props\n  return (\n    <List.Item>{data}</List.Item>\n  )\n}\n\nexport default Jobs","import React from 'react'\nimport skillData from './data/skills.json'\n\nfunction Skills() {\n  return <div>\n      {skillData.map(domain => <Domain key={domain} data={domain} />)}\n    </div>\n}\n\nfunction Domain(props) {\n  let {data} = props\n  let skills\n  if ('proficient' in data) {\n    skills = <div>\n        <p><i>Proficient with: </i>{data.proficient.join(', ')}</p>\n        <p><i>Familiar with: </i>{data.familiar.join(', ')}</p>\n      </div>\n  } else {\n    skills = <div>\n        <p>{data.skills.join(', ')}</p>\n      </div>\n  }\n  return <div>\n    <h2>{data.domain}</h2>\n    {skills}\n  </div>\n}\n\n\nexport default Skills","import React from 'react'\nimport { Header, List } from 'semantic-ui-react'\n\nimport educationData from './data/education.json'\n\nfunction Education() {\n  return <div>\n    <College data={educationData.college} />\n    <HighSchool data={educationData.highschool} />\n  </div>\n}\n\nfunction College(props) {\n  let {data} = props\n  return (\n    <div>\n      <Header as='h2'>{data.school}</Header>\n      <Header as='h3'>{data.college}</Header>\n      <p>{data.gradeuationDate}</p>\n      <p>{data.degree}</p>\n      <p>GPA: {data.GPA}</p>\n      <List>Honors:\n        {data.honors.map(honor => <List.Item key='honor'>{honor}</List.Item>)}\n      </List>\n    </div>\n  )\n}\n\nfunction HighSchool(props) {\n  let {data} = props\n  return (\n    <div>\n      <Header as='h2'>{data.school}</Header>\n      <p>{data.gradeuationDate}</p>\n      <p>{data.degree}</p>\n    </div>\n  )\n}\n\nexport default Education","import React from 'react'\nimport courseData from './data/courses.json'\nimport { Header} from 'semantic-ui-react'\n\nfunction CourseWork() {\n  return (\n  <div>\n    <div>\n      {courseData.relevant.map(course => <p key={course}>{course}</p>)}\n    </div>\n    <Header as='h2'>Additional Courses</Header>\n    <div>\n      {courseData.additional.map(course => <p key={course}>{course}</p>)}\n    </div>\n  </div>\n  )\n}\n\nexport default CourseWork","import React from 'react'\nimport { Header } from 'semantic-ui-react'\n\nimport Jobs from './jobs.js'\nimport Skills from './skills.js'\nimport Education from './education.js'\nimport CourseWork from './coursework.js'\n\nimport {  Divider, Grid, Segment } from 'semantic-ui-react'\n\nfunction Resume() {\n  return (\n    <Segment>\n      <Grid columns={2} relaxed='very' \n        container\n        divided=\"vertically\"\n        >\n        <Header as='h1'>Resume</Header>\n        <Grid.Column>\n          <Jobs />\n        </Grid.Column>\n        <Grid.Column>\n          <Skills />\n          <Education />\n          <CourseWork />\n        </Grid.Column>\n      </Grid>\n      <Divider vertical></Divider>\n    </Segment>\n  );\n}\n\nexport default Resume;\n","import React from 'react';\nimport logo from '../assets/logo.svg';\nimport { Link } from 'react-router-dom'\n\nfunction Home() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Who is Shane? Why did he make this website?\n          Great questions.\n          <br/>\n          I'm a tinkerer interested in exploring how software can enable human\n          activities!\n          Mainly I'm interested in music, film, biology, and the hiddent stories\n          in everyday life.\n          Did you know there are community driven cat infrastructure in \n          Switzerland? That's incredible.\n        </p>\n        <p>\n          Wanna see my qualifications? Weird but ok. Check it out \n          <Link to=\"/resume\">here</Link>\n        </p>\n        <p>\n          You mahy be asking yourself: can this kid even code? Well \n          (1) I have a website so I at least can do some basic HTML.\n          (2) This website is in React because I actually don't know HTML so \n          this is easier.\n          (3) Yes! Don't believe me? We trust is important, but you can also \n          check out some things I've done <Link to=\"/projects\">here</Link></p>\n      </header>\n    </div>\n  );\n}\n\nexport default Home;\n","import React from 'react';\nimport logo from '../assets/logo.svg';\n\nfunction Projects() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          You made it!\n        </p>\n        <p>Wanna see my qualifications? Weird but ok. Check it out <a href=\"resume\">here</a></p>\n      </header>\n    </div>\n  );\n}\n\nexport default Projects;\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n} from \"react-router-dom\";\nimport { Menu } from 'semantic-ui-react'\n\nimport Resume from './resume/index.js'\nimport Home from './home/index.js'\nimport Projects from './projects/index.js'\n\nlet navBar = [\n  { name:'Home', as:Link, to:'/'},\n  { name:'Resume', as:Link, to:'/resume'},\n  { name:'Projects', as:Link, to:'/projects'},\n]\n\n\nfunction WebRouter() {\n  return (\n    <Router>\n      <div>\n        <Menu items={navBar} />\n        <Switch>\n          <Route path=\"/Resume\">\n            <Resume />\n          </Route>\n          <Route path=\"/Projects\">\n            <Projects />\n          </Route>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default WebRouter;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport WebRouter from './router';\nimport * as serviceWorker from './serviceWorker';\nimport 'semantic-ui/dist/semantic.min.css';\n// import \"semantic-ui-css/semantic.min.css\";\n\nReactDOM.render(<WebRouter />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}